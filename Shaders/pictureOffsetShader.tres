[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://Textures/StaticDisplacement.jpg" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float tile_factor = 1.0;
uniform float aspect_ratio = 0.5;
uniform vec2 uv_offset_size = vec2(1.0,1.0);
uniform vec2 waves_size = vec2(0.1,0.1);
uniform float time_scale = 0.1;

uniform sampler2D uv_offset_texture : hint_black;

void fragment(){
	vec2 offset_texture_uvs = UV * uv_offset_size;
	offset_texture_uvs += cos(TIME * time_scale);
	
	vec2 texture_based_offset = texture(uv_offset_texture, offset_texture_uvs).rg;
	texture_based_offset = texture_based_offset * 2.0 - 1.0;
	
	vec2 adjusted_uv = UV * tile_factor;
	adjusted_uv.y += aspect_ratio;
	
	//COLOR = texture(TEXTURE, adjusted_uv + texture_based_offset * waves_size);
	COLOR = vec4(texture_based_offset, vec2(0.0,1.0));
	
}
"

[resource]
shader = SubResource( 1 )
shader_param/tile_factor = 0.1
shader_param/aspect_ratio = 0.5
shader_param/uv_offset_size = Vector2( 1, 1 )
shader_param/waves_size = Vector2( 0.1, 0.1 )
shader_param/time_scale = 0.1
shader_param/uv_offset_texture = ExtResource( 1 )
