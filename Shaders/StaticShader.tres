[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 tiled_factor = vec2(1.0, 1.0);
uniform float aspect_ratio = 1;

void fragment(){
//	vec2 tiled_uvs = UV * tiled_factor;
//	tiled_uvs.y *= aspect_ratio;
	
	vec2 waves_uv_offset;
	waves_uv_offset.x = cos(TIME + (UV.x) * 2.0) * 0.1;
	waves_uv_offset.y = sin(TIME + (UV.y) * 0.1) * 0.1;
	
	
	//COLOR = vec4(tiled_uvs,0.0,1.0);
	//COLOR = vec4(waves_uv_offset*10.0,0.0,1.0);
	//COLOR = texture(TEXTURE, UV + waves_uv_offset);
	
}
"

[resource]
shader = SubResource( 1 )
shader_param/tiled_factor = Vector2( 10, 10 )
shader_param/aspect_ratio = 1.0
